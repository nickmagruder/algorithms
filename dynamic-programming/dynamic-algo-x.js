// Dynamic Programming

////////////////////////////////////////////////////////////////////
// 1 - Max Subset Sum No Adjacent
////////////////////////////////////////////////////////////////////

function maxSubsetSumNoAdjacent(arr) {
  if (!arr.length) return 0;
  if (arr.length === 1) return arr[0];

  let second = arr[0];
  let largest = Math.max(arr[0], arr[1]);

  for (let i = 2; i < arr.length; i++) {
    const current = Math.max(largest, second + arr[i]);
    second = largest;
    largest = current;
  }
  return largest;
}

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
// 2 - NUmber of Ways to Make Change
////////////////////////////////////////////////////////////////////

function change() {}

////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////
// 3 - Levenshtein Distance
////////////////////////////////////////////////////////////////////
